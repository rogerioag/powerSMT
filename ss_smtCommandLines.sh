#!/bin/bash
# Para ser executado de dentro do diretorio de entradas dos benchmarks.
# Script para a execução dos benchmarks do SPEC2000.
# Configuração para o SS_SMT and PowerSMT.

# Execute the command line in inputs directory, because the inputs programs have inputs files in this 
# directory.
# Benchmarks inputs, necessary to execution, inputs of inputs are in this directory too.
HOME_INPUTS="/opt/simuladores/benchmarks/SPEC/SPEC2000/inputs-spec2000"

# Instalation simulator directory.
HOME_SIM="/home/rogerio/projetos.eclipse/projetos.cpp/powerSMT"
EXE_SIM_NAME="powerSMT"
EXE_SIM=${HOME_SIM}/${EXE_SIM_NAME}

# SMT configurations.
# File with benchmark names.
BATCH_FILE="${HOME_SIM}/RUN_SPEC2000"
# X1 and X2
X1="1"
X2="2"

# Output directory.
HOME_RESULTS="/home/rogerio/mestrado/pesquisa/simulacoes/resultados/powerSMT"

# Keep the current dir.
START_DIR=`pwd`
# File name to generate.
OUT_PUT_NAME="scriptPowerSMT.sh"

echo "------------------------------------------------------------------------"
echo "Start script to generate Command Line to SS_SMT and powerSMT Simulators."
echo "This script has writed by Rogerio A. Gonçalves (rogerio.rag@gmail.com) "
echo "Variables assumed:													 "
echo "HOME_SIM: " ${HOME_SIM}
echo "HOME_RESULTS: " ${HOME_RESULTS}
echo "-----------------------------------------------------------------------"
echo "Processing..."

# Diretorio de saida.
OUTPUT_DIR_NAME=`date +%d%m%Y%H%M%S`
OUTPUT_DIR=$HOME_RESULTS/$OUTPUT_DIR_NAME

mkdir $OUTPUT_DIR

# Number of instructions to fast foward.
NUM_INST_FWD=50000000
# Max number of instructions executed.
NUM_MAX_INST=200000000

# Original options from sim-outorder plus some new ones.

FAST_FWD="-fastfwd ${NUM_INST_FWD}"
MAX_INST="-max:inst ${NUM_MAX_INST}"

# Memory Configuration.
MEM_CONFIG="-mem:width 8"

# Individual cache configurations to SS_SMT and powerSMT.
# <name>:<nbanks>:<csize>:<bsize>:<assoc>:<repl>
CACHE_IL1="-cache:il1 il1:1:32:64:4:l"
CACHE_IL2="-cache:il2 dl2"
CACHE_DL1="-cache:dl1 dl1:1:64:64:4:l"
CACHE_DL2="-cache:dl2 ul2:1:1024:128:8:l"
      
# Cache configuration.
CACHE_CONFIG="${CACHE_IL1} ${CACHE_IL2} ${CACHE_DL1} ${CACHE_DL2}"

# Individual tlbs configurations.
# itlb.
ITLB_CONFIG="-tlb:itlb itlb:256:4096:8:l"

# dtlb.
DTLB_CONFIG="-tlb:dtlb dtlb:512:4096:8:l"

# TLBS Configuration.
TLBS_CONFIG="${ITLB_CONFIG} ${DTLB_CONFIG}"

# Modules configuration.
MODULES_CONFIG="-imodules:num 2"

# FETCH configuration.
FETCH_CONFIG="-fetch:width 8 -fetch:ifqsize 8"

# DECOD configuration.
DECOD_CONFIG="-decode:width 16"

# BPred configuration.
BPRED_CONFIG="-bpred:type forced:100"

# ISSUE configuration.
ISSUE_CONFIG="-issue:inorder FALSE -issue:width 16"

# RUU/LSQ configuration.
RUU_LSQ_CONFIG="-ruulsq:type distributed -ruu:size 16 -lsq:size 8"

# Functional Units configuration.
FU_CONFIG="-fu:type hetero -res:ialu 5 -res:imult 2 -res:memport 3 -res:fpalu 5 -res:fpmult 2"

# Commit configuration.
COMMIT_CONFIG="-commit:width 16"

# Command line.
SIMULATOR_OPTIONS="${FAST_FWD} ${MAX_INST} ${CACHE_CONFIG} ${TLBS_CONFIG} ${MODULES_CONFIG} ${FETCH_CONFIG} ${DECOD_CONFIG} ${BPRED_CONFIG} ${ISSUE_CONFIG} ${RUU_LSQ_CONFIG} ${FU_CONFIG} ${COMMIT_CONFIG}"

# ss_smt <x1> <x2> {options} batch file
# ss_smt 1 8 {options} RUN_SPEC2000
# which:
# <x1> : initial line to consider from <batch file> (ignoring blank and comentaries lines)
# <x2> : final line to consider from <batch file> (ignoring blank and comentaries lines)
# {options} : original options from sim-outorder plus some new ones
# <batch file> : text file: each line must be a command line for one application that will
# be executed for each slot

FILE_OUT_PUT=${START_DIR}/${OUT_PUT_NAME}

echo "#!/bin/bash" > ${FILE_OUT_PUT}
echo "# File generated by Script ($0) at `date +%d/%m/%Y-%H:%M:%S`." >> ${FILE_OUT_PUT}
echo "# Run ${SPEC_NAME} benchmarks." >> ${FILE_OUT_PUT}
echo "cd ${HOME_INPUTS}" >> ${FILE_OUT_PUT}

echo "" >> ${FILE_OUT_PUT}
echo "echo \"Executando bechmarks (1-1).\"" >> ${FILE_OUT_PUT}

# Generate command lines 1 - 1.
for index in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
do
  REDIR_SIM="-redir:sim ${OUTPUT_DIR}/simout_${index}.txt"
  REDIR_PROG="-redir:prog ${OUTPUT_DIR}/progout_${index}.txt"
  COMMAND_LINE="${EXE_SIM} ${index} ${index} ${REDIR_SIM} ${REDIR_PROG} ${SIMULATOR_OPTIONS} ${BATCH_FILE}"
  echo "${COMMAND_LINE}" >> ${FILE_OUT_PUT}
  echo "" >> ${FILE_OUT_PUT}
done

echo "" >> ${FILE_OUT_PUT}
echo "echo \"Executando bechmarks (1-2).\"" >> ${FILE_OUT_PUT}

# Generate command lines 1 - 2.
for index in 1 3 5 7 9 11 13 15 17
do
  indexMais1=$[${index}+1]
  REDIR_SIM="-redir:sim ${OUTPUT_DIR}/simout_${index}_${indexMais1}.txt"
  REDIR_PROG="-redir:prog ${OUTPUT_DIR}/progout_${index}_${indexMais1}.txt"
  COMMAND_LINE="${EXE_SIM} ${index} ${indexMais1} ${REDIR_SIM} ${REDIR_PROG} ${SIMULATOR_OPTIONS} ${BATCH_FILE}"
  echo "${COMMAND_LINE}" >> ${FILE_OUT_PUT}
  echo "" >> ${FILE_OUT_PUT}
done

echo "" >> ${FILE_OUT_PUT}
echo "echo \"Executando bechmarks (1-4).\"" >> ${FILE_OUT_PUT}

# Generate command lines 1 - 4.
for index in 1 5 9 13
do
  indexMais3=$[${index}+3]
  REDIR_SIM="-redir:sim ${OUTPUT_DIR}/simout_${index}_${indexMais3}.txt"
  REDIR_PROG="-redir:prog ${OUTPUT_DIR}/progout_${index}_${indexMais3}.txt"
  COMMAND_LINE="${EXE_SIM} ${index} ${indexMais3} ${REDIR_SIM} ${REDIR_PROG} ${SIMULATOR_OPTIONS} ${BATCH_FILE}"
  echo "${COMMAND_LINE}" >> ${FILE_OUT_PUT}
  echo "" >> ${FILE_OUT_PUT}
done

echo "" >> ${FILE_OUT_PUT}
echo "echo \"Executando bechmarks (1-8).\"" >> ${FILE_OUT_PUT}

# Generate command lines 1 - 8.
for index in 1 9
do
  indexMais7=$[${index}+7]
  REDIR_SIM="-redir:sim ${OUTPUT_DIR}/simout_${index}_${indexMais7}.txt"
  REDIR_PROG="-redir:prog ${OUTPUT_DIR}/progout_${index}_${indexMais7}.txt"
  COMMAND_LINE="${EXE_SIM} ${index} ${indexMais7} ${REDIR_SIM} ${REDIR_PROG} ${SIMULATOR_OPTIONS} ${BATCH_FILE}"
  echo "${COMMAND_LINE}" >> ${FILE_OUT_PUT}
  echo "" >> ${FILE_OUT_PUT}
done

echo "" >> ${FILE_OUT_PUT}
echo "echo \"Término da Execução \`date\`.\"" >> ${FILE_OUT_PUT}

echo "End of Script Execution."

